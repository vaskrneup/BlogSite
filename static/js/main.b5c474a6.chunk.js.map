{"version":3,"sources":["components/navbar.jsx","commonScripts/urlRelated.js","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","DEFAULTS","redirect","link","document","getElementsByTagName","innerHTML","window","location","replace","Home","useState","html","setHtml","has_error","error_msg","response","linkShortner","setLinkShortner","useEffect","token","search","substr","Axios","get","then","res","data","alert","catch","err","initialTimer","forEach","msg","setTimeout","oldCounter","id","action","method","onSubmit","event","preventDefault","url","getElementById","value","post","type","width","placeholder","required","style","marginLeft","map","i","key","length","onClick","navigator","clipboard","writeText","r","App","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.b5c474a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../css/navBar.css';\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav>\r\n            <h1 className=\"logo colorTheme4\">Vaskr</h1>\r\n            <ul className=\"nav__links\">\r\n                <li><a href=\"#\">ABOUT</a></li>\r\n                <li><a href=\"#\">PROJECTS</a></li>\r\n                <li><a href=\"#\">CONTACT</a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","export const DEFAULTS = {\r\n    \"host\": \"https://vaskrneupblogsite.pythonanywhere.com/\"\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Axios from \"axios\";\r\n\r\nimport '../css/pages/home.css'\r\nimport {DEFAULTS} from \"../commonScripts/urlRelated\";\r\n\r\nfunction redirect(link) {\r\n    document.getElementsByTagName(\"body\")[0].innerHTML = \"<h1 style='color:#989898;'>Please Wait, You will be redirected in few seconds...</h1>>\"\r\n    window.location.replace(link);\r\n}\r\n\r\nfunction Home() {\r\n    const [html, setHtml] = useState(\"Site is under construction, Please come back later.\")\r\n    const [linkShortner, setLinkShortner] = useState({has_error: false, error_msg: [], response: \"\"})\r\n\r\n    useEffect(() => {\r\n        // for redirect !!\r\n        // const path = window.location.pathname;\r\n\r\n        // if (path.startsWith(\"/r-\") || path.startsWith(\"r-\")) {\r\n        let token = window.location.search.substr(1);\r\n\r\n        // if (path.startsWith(\"/r-\")) {\r\n        //     token = path.slice(3);\r\n        // } else {\r\n        //     token = path.slice(2);\r\n        // }\r\n\r\n\r\n        if (token.substr(0, 2) === \"r-\") {\r\n            Axios.get(DEFAULTS.host + \"api/url_shortner/\" + token.substr(2) + \"/\").then(res => {\r\n                if (res.data.has_error) {\r\n                    alert(res.data.error_msg)\r\n                    redirect(\"https://vaskr.ml/\")\r\n                } else {\r\n                    redirect(res.data[\"redirect_link\"])\r\n                }\r\n            }).catch(err => {\r\n                alert(\"Confirm Your internet Connection and try again.\")\r\n            })\r\n        }\r\n\r\n        // }\r\n\r\n        function oldCounter() {\r\n            const msgList = [\r\n                \"No wait, it's going to complete.\",\r\n                \"No it isn't, Come back later ðŸ˜‚\",\r\n                \"Thanks for coming, hope to see you soon ðŸ˜Š\"\r\n            ];\r\n            let initialTimer = 5000;\r\n\r\n            msgList.forEach((msg) => {\r\n                setTimeout(() => {\r\n                    setHtml(msg);\r\n                }, initialTimer);\r\n\r\n                initialTimer += 5000;\r\n            });\r\n        }\r\n\r\n        oldCounter();\r\n    }, []);\r\n\r\n    function handleLinkShortnerFormSubmission(event) {\r\n        event.preventDefault();\r\n\r\n        const url = document.getElementById(\"url\").value\r\n        const token = document.getElementById(\"token\").value\r\n\r\n        Axios.post(DEFAULTS.host + \"api/url_shortner/create_link/\" + token + \"/?url=\" + url).then(res => {\r\n            setLinkShortner(res.data)\r\n        }).catch(err => {\r\n            setLinkShortner({\r\n                has_error: true, error_msg: [\r\n                    \"Make Sure the name is correct ascii characters.\",\r\n                    \"Confirm Your internet Connection and try again\",\r\n                    \"If nothing works, then server might be down, please Come back later.\"\r\n                ], response: \"\"\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <br/>\r\n            <div className=\"home__header\">\r\n                <h1>{html}</h1>\r\n            </div>\r\n\r\n            <hr/>\r\n            <div className=\"home__header colorTheme4\">\r\n                <h1>But You may shorten your link right now.</h1>\r\n            </div>\r\n            <br/>\r\n            <form className=\"link_header\" id=\"linkSubmissionForm\" action=\"\" method=\"POST\"\r\n                  onSubmit={handleLinkShortnerFormSubmission}>\r\n                <input type=\"text\" className=\"link_input\" width=\"100%\" placeholder=\"Link to shorten\" id=\"url\" required/>\r\n                <input type=\"text\" className=\"link_input\" width=\"100%\" required id=\"token\"\r\n                       placeholder=\"Shortened Link (After https://vaskr.ml/r-<YOUR LINK>)\"/>\r\n                <input type=\"submit\" className=\"submit_btn link_input\" value=\"Shorten My Link\"/>\r\n                {linkShortner.has_error ? (\r\n                    <>\r\n                        <span className=\"error_msg\">Seems like we have some error (Please Correct the info before submitting again).</span>\r\n                        <div style={{marginLeft: \"30px\"}}>\r\n                            <ul className=\"error_msg\">\r\n                                {linkShortner.error_msg.map((msg, i) => {\r\n                                    return (\r\n                                        <li key={i}><small>{msg}</small></li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"borderBottom\">\r\n                        </div>\r\n                    </>) : \"\"\r\n                }\r\n                {/*Must be replaced !!*/}\r\n                {\r\n                    !linkShortner.has_error && linkShortner.response.length !== 0 ? (\r\n                        <>\r\n                            <span onClick={() => {\r\n                                navigator.clipboard.writeText(\"https://vaskr.ml?r-\" + linkShortner.response).then(r => alert(\"Link https://vaskr.ml?r-\" + linkShortner.response + \" copied to clipboard.\"))\r\n                            }}>\r\n                                Your New Link is \"\r\n                                <span id=\"newLink\">{\"https://vaskr.ml?r-\" + linkShortner.response}</span>\r\n                            </span>\r\n                            <div className=\"borderBottom\">\r\n                            </div>\r\n                        </>\r\n                    ) : \"\"\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","// inbuilt modules !!\nimport React from 'react';\n\n// components !!\n// -- custom components\nimport Navbar from \"./components/navbar\";\nimport Home from \"./pages/Home\";\n\n// static files !!\n// -- css files !!\nimport \"./css/App.css\";\nimport \"./css/common.css\";\n// import Projects from \"./pages/Projects\";\n\nfunction App() {\n    return (\n        <>\n            <header>\n                {/* Navbar Related */}\n                <Navbar/>\n            </header>\n\n            {/*    HOME RELATED !!*/}\n            <Home/>\n            {/*    END HOME RELATED !!*/}\n\n            {/*    PROJECT RELATED !!  */}\n            {/*<Projects/>*/}\n            {/*    END PROJECT RELATED !!*/}\n\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}